@model IEnumerable<IEmbeddedDataSpecification>
@using BaSyx.Models.AdminShell

@if (Model?.Count() > 0)
{
    @foreach (var dataSpecification in Model)
    {
        <li class="list-group-item" style="background:#88b8d9; color:white">
            <div class="row align-items-center">
                <div class="col-sm-2"><b>Data-Specification</b></div>
                <div class="col-sm-10">@dataSpecification.HasDataSpecification.First.Value</div>
            </div>
        </li>

        @foreach (var property in dataSpecification.DataSpecificationContent.GetType().GetProperties())
        {

            @if (property.PropertyType.IsGenericType && (property.PropertyType.GetGenericTypeDefinition() == typeof(List<>)))
            {
                var values = property.GetValue(dataSpecification.DataSpecificationContent) as IEnumerable<object>;
                if (values?.Count() > 0)
                {
                    foreach (var element in values)
                    {
                        foreach (var subProperty in property.PropertyType.GenericTypeArguments[0].GetProperties())
                        {
                            var value = subProperty.GetValue(element)?.ToString();
                            if (value != null)
                            {
                                <li class="list-group-item" style="background:#88b8d9; color:white">
                                    <div class="row align-items-center">
                                        <div class="col-sm-2"><b>@subProperty.Name</b></div>
                                        <div class="col-sm-10">@value</div>
                                    </div>
                                </li>
                            }
                        }
                    }
                }
            }
            else
            {
                var value = property.GetValue(dataSpecification.DataSpecificationContent);
                if (value != null)
                {
                    if (value is IReference reference)
                    {
                        value = reference.First.Value;
                    }
                    else
                    {
                        value = value.ToString();
                    }

                    <li class="list-group-item" style="background:#88b8d9; color:white">
                        <div class="row align-items-center">
                            <div class="col-sm-2"><b>@property.Name</b></div>
                            <div class="col-sm-10">@value</div>
                        </div>
                    </li>
                }
            }

        }
    }
}