<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BaSyx.API.Http.Controllers</name>
    </assembly>
    <members>
        <member name="T:BaSyx.API.Http.Controllers.AssetAdministrationShellController">
            <summary>
            The Asset Administration Shell Controller
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.#ctor(BaSyx.API.ServiceProvider.IAssetAdministrationShellServiceProvider,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            The constructor for the Asset Administration Shell Controller
            </summary>
            <param name="aasServiceProvider">The Asset Administration Shell Service Provider implementation provided by the dependency injection</param>
            <param name="environment">The Hosting Environment provided by the dependency injection</param>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.GetAssetAdministrationShell">
            <summary>
            Returns a specific Asset Administration Shell
            </summary>
            <returns></returns>
            <response code="200">Requested Asset Administration Shell</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.PutAssetAdministrationShell(BaSyx.Models.AdminShell.IAssetAdministrationShell)">
            <summary>
            Updates an existing Asset Administration Shell
            </summary>
            <param name="aas">Asset Administration Shell object</param>
            <returns></returns>
            <response code="204">Asset Administration Shell updated successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.GetAssetAdministrationShellReference">
            <summary>
            Returns a specific Asset Administration Shell as a Reference
            </summary>
            <returns></returns>
            <response code="200">Requested Asset Administration Shell</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.GetAssetInformation">
            <summary>
            Returns the Asset Information
            </summary>
            <returns></returns>
            <response code="200">Requested Asset Information</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.PutAssetInformation(BaSyx.Models.AdminShell.IAssetInformation)">
            <summary>
            Updates the Asset Information
            </summary>
            <param name="assetInformation">Asset Information object</param>
            <returns></returns>
            <response code="204">Asset Information updated successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.GetThumbnail">
            <summary>
            The thumbnail of the Asset Information.
            </summary>
            <returns></returns>
            <response code="200">Requested Asset Information</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.PutThumbnail(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Updates the Asset Information
            </summary>
            <param name="assetInformation">Asset Information object</param>
            <returns></returns>
            <response code="204">Asset Information updated successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.GetAllSubmodelReferences(System.Int32,System.String)">
            <summary>
            Returns all submodel references
            </summary>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Requested submodel references</response> 
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.PostSubmodelReference(BaSyx.Models.AdminShell.IReference)">
            <summary>
            Creates a submodel reference at the Asset Administration Shell
            </summary>
            <param name="submodelReference">Reference to the Submodel</param>
            <returns></returns>
            <response code="201">Submodel reference created successfully</response>
            <response code="400">Bad Request</response>               
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.DeleteSubmodelReferenceById(System.String)">
            <summary>
            Deletes the submodel reference from the Asset Administration Shell. Does not delete the submodel itself!
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="204">Submodel deleted successfully</response>
            <response code="400">Bad Request</response>    
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodel(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns the Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">Requested submodel references</response> 
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodel(BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelMetadata(System.String)">
            <summary>
            Returns the metadata attributes of a specific Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Requested Submodel</response>
            <response code="404">Submodel not found</response>  
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelMetadata"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PatchSubmodelMetadata(System.String,BaSyx.Models.AdminShell.ISubmodel)">
            <summary>
            Updates the metadata attributes of the Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="submodel">The metadata attributes of the Submodel object</param>
            <returns></returns>
            <response code="200">Requested Submodel</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelMetadata"/> 
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelValue(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns the Submodel in the ValueOnly representation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">ValueOnly representation of the Submodel</response>   
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelValueOnly(BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PatchSubmodelValueOnly(System.String,System.Text.Json.JsonDocument)">
            <summary>
            Updates the values of the Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="requestBody">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel object in its ValueOnly representation</response>     
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelValueOnly(System.Text.Json.JsonDocument)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelReference(System.String)">
            <summary>
            Returns the Reference of the Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">ValueOnly representation of the Submodel</response> 
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelReference"/>    
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelPath(System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns the Submodel in the Path notation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">Submodel in Path notation</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelPath(BaSyx.Models.AdminShell.RequestLevel)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PutSubmodel(System.String,BaSyx.Models.AdminShell.ISubmodel)">
            <summary>
            Replaces the Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="204">Submodel updated successfully</response>     
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PutSubmodel(BaSyx.Models.AdminShell.ISubmodel)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PatchSubmodel(System.String,BaSyx.Models.AdminShell.ISubmodel)">
            <summary>
            Updates the Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <param name="submodel">Submodel object</param>
            <response code="204">Submodel updated successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodel(BaSyx.Models.AdminShell.ISubmodel)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetAllSubmodelElements(System.String,System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns all submodel elements including their hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>
            <response code="404">Submodel not found</response>   
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElements(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetAllSubmodelElementsMetadata(System.String,System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns the metadata attributes of all submodel elements including their hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElementsMetadata(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel)"/>   
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetAllSubmodelElementsValueOnly(System.String,System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns all submodel elements including their hierarchy in the ValueOnly representation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>  
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElementsValueOnly(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>   
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetAllSubmodelElementsReference(System.String,System.Int32,System.String)">
            <summary>
            Returns the References of all submodel elements
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>  
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElementsReference(System.Int32,System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetAllSubmodelElementsPath(System.String,System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns all submodel elements including their hierarchy in the Path notation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>      
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">List of found submodel elements in the Path notation</response>  
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PostSubmodelElement(System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Creates a new submodel element
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="submodelElement">Requested submodel element</param>
            <returns></returns>
            <response code="201">Submodel element created successfully</response>
            <inheritdoc cref="!:SubmodelController.PostSubmodelElement(ISubmodelElement, RequestLevel, RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">Requested submodel element</response>  
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelElementByPathMetadata(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns the metadata attributes of a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
            <response code="404">Submodel Element not found</response>     
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathMetadata(System.String,BaSyx.Models.AdminShell.RequestLevel)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PatchSubmodelElementByPathMetadata(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Updates the metadata attributes an existing SubmodelElement
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="submodelElement">Metadata attributes of the SubmodelElement</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response> 
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelElementByPathMetadata(System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/> 
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelElementByPathValueOnly(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns a specific submodel element from the Submodel at a specified path in the ValueOnly representation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathValueOnly(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelElementByPathReference(System.String,System.String)">
            <summary>
            Returns the Reference of a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathReference(System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelElementByPathPath(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns a specific submodel element from the Submodel at a specified path in the Path notation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathPath(System.String,BaSyx.Models.AdminShell.RequestLevel)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PostSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Creates a new submodel element at a specified path within submodel elements hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="submodelElement">Requested submodel element</param>
            <returns></returns>
            <response code="201">Submodel element created successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PostSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PutSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Replaces an existing submodel element at a specified path within the submodel element hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="requestBody">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel element updated successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PutSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PatchSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Updates an existing SubmodelElement
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="submodelElement">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel element updated successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PatchSubmodelElementValueByPathValueOnly(System.String,System.String,System.Text.Json.JsonDocument)">
            <summary>
            Updates the value of an existing submodel element value at a specified path within submodel elements hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="requestBody">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel element updated successfully</response>
            <response code="400">Bad Request</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelElementValueByPathValueOnly(System.String,System.Text.Json.JsonDocument)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_DeleteSubmodelElementByPath(System.String,System.String)">
            <summary>
            Deletes a submodel element at a specified path within the submodel elements hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <returns></returns>
            <response code="204">Submodel element deleted successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.DeleteSubmodelElementByPath(System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetFileByPath(System.String,System.String)">
            <summary>
            Downloads file content from a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case a file</param>
            <returns></returns>
            <response code="200">Requested file</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetFileByPath(System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PutFileByPath(System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Uploads file content to an existing submodel element at a specified path within submodel elements hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case a file</param>
            <param name="file">Content to upload</param>
            <returns></returns>
            <response code="200">Content uploaded successfully</response>
            <response code="400">Bad Request</response>
            <response code="404">File not found</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PutFileByPath(System.String,Microsoft.AspNetCore.Http.IFormFile)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_DeleteFileByPath(System.String,System.String)">
            <summary>
            Deletes file content of an existing submodel element at a specified path within submodel elements hierarchy
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case a file</param>
            <returns></returns>
            <response code="200">File deleted successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.DeleteFileByPath(System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_InvokeOperationSync(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Synchronously invokes an Operation at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationSync(System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_InvokeOperationAsync(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Asynchronously invokes an Operation at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationAsync(System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_InvokeOperationSyncValueOnly(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Synchronously invokes an Operation at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationSyncValueOnly(System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_InvokeOperationAsyncValueOnly(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Asynchronously invokes an Operation at a specified path
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationAsyncValueOnly(System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetOperationAsyncStatus(System.String,System.String,System.String)">
            <summary>
            Returns the Operation status of an asynchronous invoked Operation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="handleId">The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Operation result object</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetOperationAsyncStatus(System.String,System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetOperationAsyncResult(System.String,System.String,System.String)">
            <summary>
            Returns the Operation result of an asynchronous invoked Operation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="handleId">The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Operation result object</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetOperationAsyncResult(System.String,System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetOperationAsyncResultValueOnly(System.String,System.String,System.String)">
            <summary>
            Returns the Operation result of an asynchronous invoked Operation
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="handleId">The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Operation result object</response>
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetOperationAsyncResultValueOnly(System.String,System.String)"/>
        </member>
        <member name="T:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController">
            <summary>
            The Asset Administration Shell Repository Controller
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.#ctor(BaSyx.API.ServiceProvider.IAssetAdministrationShellRepositoryServiceProvider,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            The constructor for the Asset Administration Shell Repository Controller
            </summary>
            <param name="assetAdministrationShellRepositoryServiceProvider"></param>
            <param name="environment">The Hosting Environment provided by the dependency injection</param>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.GetAllAssetAdministrationShells">
            <summary>
            Returns all Asset Administration Shells
            </summary>
            <returns></returns>
            <response code="200">Requested Asset Administration Shells</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.PostAssetAdministrationShell(BaSyx.Models.AdminShell.IAssetAdministrationShell)">
            <summary>
            Creates a new Asset Administration Shell
            </summary>
            <param name="aas">Asset Administration Shell object</param>
            <returns></returns>
            <response code="201">Asset Administration Shell created successfully</response>
            <response code="400">Bad Request</response>             
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.GetAssetAdministrationShellById(System.String)">
            <summary>
            Returns a specific Asset Administration Shell
            </summary>
            <param name="aasIdentifier">The Asset Administration Shell’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Returns the requested Asset Administration Shell</response>
            <response code="404">No Asset Administration Shell found</response>           
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.GetAssetAdministrationShellDescriptorFromRepoById(System.String)">
            <summary>
            Returns a specific Asset Administration Shell Descriptor
            </summary>
            <param name="aasIdentifier">The Asset Administration Shell’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Returns the requested Asset Administration Shell Descriptor</response>
            <response code="404">No Asset Administration Shell Descriptor found</response>           
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.PutAssetAdministrationShellById(System.String,BaSyx.Models.AdminShell.IAssetAdministrationShell)">
            <summary>
            Updates an existing Asset Administration Shell
            </summary>
            <param name="aasIdentifier">The Asset Administration Shell’s unique id (BASE64-URL-encoded)</param>
            <param name="aas">Asset Administration Shell object</param>
            <returns></returns>
            <response code="204">Asset Administration Shell updated successfully</response>          
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.DeleteAssetAdministrationShellById(System.String)">
            <summary>
            Deletes an Asset Administration Shell
            </summary>
            <param name="aasIdentifier">The Asset Administration Shell’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Asset Administration Shell deleted successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetAssetInformation(System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.GetAssetInformation"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PutAssetInformation(System.String,BaSyx.Models.AdminShell.IAssetInformation)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.PutAssetInformation(BaSyx.Models.AdminShell.IAssetInformation)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetAllSubmodelReferences(System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.GetAllSubmodelReferences(System.Int32,System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PostSubmodelReference(System.String,BaSyx.Models.AdminShell.IReference)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.PostSubmodelReference(BaSyx.Models.AdminShell.IReference)"/>          
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_DeleteSubmodelReferenceById(System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.DeleteSubmodelReferenceById(System.String)"/>          
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetSubmodel(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodel(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PutSubmodel(System.String,System.String,BaSyx.Models.AdminShell.ISubmodel)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PutSubmodel(System.String,BaSyx.Models.AdminShell.ISubmodel)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetAllSubmodelElements(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetAllSubmodelElements(System.String,System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetAllSubmodelElementsMetadata(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="!:AssetAdministrationShellController.Shell_GetAllSubmodelElementsMetadata(string, RequestLevel, RequestExtent)"/>   
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetAllSubmodelElementsValueOnly(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetAllSubmodelElementsValueOnly(System.String,System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>   
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PostSubmodelElement(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PostSubmodelElement(System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetSubmodelElementByPath(System.String,System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetFileByPath(System.String,System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetFileByPath(System.String,System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PutFileByPath(System.String,System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PutFileByPath(System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetSubmodelElementByPathValueOnly(System.String,System.String,System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <inheritdoc cref="!:AssetAdministrationShellController.Shell_GetSubmodelElementByPathValueOnly(string, string, RequestLevel)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PatchSubmodelElementValueByPathValueOnly(System.String,System.String,System.String,System.Text.Json.JsonDocument)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PatchSubmodelElementValueByPathValueOnly(System.String,System.String,System.Text.Json.JsonDocument)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PostSubmodelElementByPath(System.String,System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PostSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_PutSubmodelElementByPath(System.String,System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PutSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_DeleteSubmodelElementByPath(System.String,System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_DeleteSubmodelElementByPath(System.String,System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_UploadFileContentByIdShort(System.String,System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_PutFileByPath(System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_InvokeOperationSync(System.String,System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_InvokeOperationSync(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_InvokeOperationAsync(System.String,System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_InvokeOperationAsync(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRepositoryController.ShellRepo_GetOperationAsyncResult(System.String,System.String,System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.AssetAdministrationShellController.Shell_GetOperationAsyncResult(System.String,System.String,System.String)"/>
        </member>
        <member name="T:BaSyx.API.Http.Controllers.SubmodelController">
            <summary>
            The Submodel Controller
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.#ctor(BaSyx.API.ServiceProvider.ISubmodelServiceProvider,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            The constructor for the Submodel Controller
            </summary>
            <param name="submodelServiceProvider">The Submodel Service Provider implementation provided by the dependency injection</param>
            <param name="environment">The Hosting Environment provided by the dependency injection</param>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodel(BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns the Submodel
            </summary>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">Requested Submodel</response>   
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PutSubmodel(BaSyx.Models.AdminShell.ISubmodel)">
            <summary>
            Replaces the Submodel
            </summary>
            <returns></returns>
            <param name="submodel">Submodel object</param>
            <response code="204">Submodel updated successfully</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodel(BaSyx.Models.AdminShell.ISubmodel)">
            <summary>
            Updates the Submodel
            </summary>
            <returns></returns>
            <param name="submodel">Submodel object</param>
            <response code="204">Submodel updated successfully</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelMetadata">
            <summary>
            Returns the metadata attributes of a specific Submodel
            </summary>
            <returns></returns>
            <response code="200">Requested Submodel</response>
            <response code="404">Submodel not found</response>       
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelMetadata(BaSyx.Models.AdminShell.ISubmodel)">
            <summary>
            Updates the metadata attributes of the Submodel
            </summary>
            <param name="submodel">The metadata attributes of the Submodel object</param>
            <returns></returns>
            <response code="200">Requested Submodel</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelValueOnly(BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns the Submodel in the ValueOnly representation
            </summary>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">ValueOnly representation of the Submodel</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelValueOnly(System.Text.Json.JsonDocument)">
            <summary>
            Updates the values of the Submodel
            </summary>
            <param name="requestBody">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel object in its ValueOnly representation</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelReference">
            <summary>
            Returns the Reference of the Submodel
            </summary>
            <returns></returns>
            <response code="200">ValueOnly representation of the Submodel</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelPath(BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns the Submodel in the Path notation
            </summary>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">Submodel in Path notation</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElements(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns all submodel elements including their hierarchy
            </summary>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>
            <response code="404">Submodel not found</response>       
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PostSubmodelElement(BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Creates a new submodel element
            </summary>
            <param name="submodelElement">Requested submodel element</param>
            <returns></returns>
            <response code="201">Submodel element created successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElementsMetadata(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns the metadata attributes of all submodel elements including their hierarchy
            </summary>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElementsValueOnly(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns all submodel elements including their hierarchy in the ValueOnly representation
            </summary>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>  
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElementsReference(System.Int32,System.String)">
            <summary>
            Returns the References of all submodel elements
            </summary>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
            <returns></returns>
            <response code="200">List of found submodel elements</response>  
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElementsPath(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns all submodel elements including their hierarchy in the Path notation
            </summary>
            <param name="limit">The maximum number of elements in the response array</param>
            <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>      
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">List of found submodel elements in the Path notation</response>  
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">Requested submodel element</response>  
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PostSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Creates a new submodel element at a specified path within submodel elements hierarchy
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="submodelElement">Requested submodel element</param>
            <returns></returns>
            <response code="201">Submodel element created successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PutSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Replaces an existing submodel element at a specified path within the submodel element hierarchy
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="submodelElement">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel element updated successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Updates an existing SubmodelElement
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="submodelElement">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel element updated successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.DeleteSubmodelElementByPath(System.String)">
            <summary>
            Deletes a submodel element at a specified path within the submodel elements hierarchy
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <returns></returns>
            <response code="204">Submodel element deleted successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathMetadata(System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns the metadata attributes of a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
            <response code="404">Submodel Element not found</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelElementByPathMetadata(System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <summary>
            Updates the metadata attributes an existing SubmodelElement
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="submodelElement">Metadata attributes of the SubmodelElement</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>  
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathValueOnly(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns a specific submodel element from the Submodel at a specified path in the ValueOnly representation
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <param name="extent">Determines to which extent the resource is being serialized</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelElementValueByPathValueOnly(System.String,System.Text.Json.JsonDocument)">
            <summary>
            Updates the value of an existing submodel element value at a specified path within submodel elements hierarchy
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="requestBody">Requested submodel element</param>
            <returns></returns>
            <response code="204">Submodel element updated successfully</response>
            <response code="400">Bad Request</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathReference(System.String)">
            <summary>
            Returns the Reference of a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathPath(System.String,BaSyx.Models.AdminShell.RequestLevel)">
            <summary>
            Returns a specific submodel element from the Submodel at a specified path in the Path notation
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated)</param>
            <param name="level">Determines the structural depth of the respective resource content</param>
            <returns></returns>
            <response code="200">Requested submodel element in its ValueOnly representation</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetFileByPath(System.String)">
            <summary>
            Downloads file content from a specific submodel element from the Submodel at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case a file</param>
            <returns></returns>
            <response code="200">Requested file</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.PutFileByPath(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Uploads file content to an existing submodel element at a specified path within submodel elements hierarchy
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case a file</param>
            <param name="file">Content to upload</param>
            <returns></returns>
            <response code="200">Content uploaded successfully</response>
            <response code="400">Bad Request</response>
            <response code="404">File not found</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.DeleteFileByPath(System.String)">
            <summary>
            Deletes file content of an existing submodel element at a specified path within submodel elements hierarchy
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case a file</param>
            <returns></returns>
            <response code="200">File deleted successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationSync(System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Synchronously invokes an Operation at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationAsync(System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Asynchronously invokes an Operation at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationSyncValueOnly(System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Synchronously invokes an Operation at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationAsyncValueOnly(System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <summary>
            Asynchronously invokes an Operation at a specified path
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="operationRequest">Operation request object</param>
            <returns></returns>
            <response code="200">Operation invoked successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetOperationAsyncStatus(System.String,System.String)">
            <summary>
            Returns the Operation status of an asynchronous invoked Operation
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="handleId">The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Operation result object</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetOperationAsyncResult(System.String,System.String)">
            <summary>
            Returns the Operation result of an asynchronous invoked Operation
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="handleId">The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Operation result object</response>
            <response code="400">Bad Request</response>
            <response code="404">Operation / Request not found</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelController.GetOperationAsyncResultValueOnly(System.String,System.String)">
            <summary>
            Returns the Operation result of an asynchronous invoked Operation
            </summary>
            <param name="idShortPath">IdShort path to the submodel element (dot-separated), in this case an operation</param>
            <param name="handleId">The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Operation result object</response>
        </member>
        <member name="T:BaSyx.API.Http.Controllers.SubmodelRepositoryController">
            <summary>
            The Submodel Repository Controller
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.#ctor(BaSyx.API.ServiceProvider.ISubmodelRepositoryServiceProvider,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            The constructor for the Submodel Repository Controller
            </summary>
            <param name="submodelRepositoryServiceProvider"></param>
            <param name="environment">The Hosting Environment provided by the dependency injection</param>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.GetAllSubmodels(System.String,System.String)">
            <summary>
            Returns all Submodels
            </summary>
            <param name="semanticId">The value of the semantic id reference (BASE64-URL-encoded)</param>
            <param name="idShort">The Submodel's idShort</param>
            <returns>Requested Submodels</returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.PostSubmodel(BaSyx.Models.AdminShell.ISubmodel)">
            <summary>
            Creates a new Submodel
            </summary>
            <param name="submodel">Submodel object</param>
            <returns></returns>
            <response code="201">Submodel created successfully</response>
            <response code="400">Bad Request</response>             
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.GetSubmodelById(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Returns a specific Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="level"></param>
            <param name="extent"></param>
            <returns></returns>
            <response code="200">Requested Submodel</response>
            <response code="404">No Submodel found</response>        
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.PutSubmodelById(System.String,BaSyx.Models.AdminShell.ISubmodel,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <summary>
            Updates an existing Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="submodel">Submodel object</param>
            <param name="level"></param>
            <param name="extent"></param>
            <returns></returns>
            <response code="201">Submodel updated successfully</response>
            <response code="400">Bad Request</response>             
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.DeleteSubmodelById(System.String)">
            <summary>
            Deletes a Submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Submodel deleted successfully</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_GetSubmodelMetadata(System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelMetadata"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_GetSubmodelValue(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelValueOnly(BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_GetAllSubmodelElements(System.String,System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetAllSubmodelElements(System.Int32,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_PostSubmodelElement(System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <inheritdoc cref="!:SubmodelController.PostSubmodelElement(ISubmodelElement, RequestLevel, RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_GetSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_GetSubmodelElementByPathValueOnly(System.String,System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetSubmodelElementByPathValueOnly(System.String,BaSyx.Models.AdminShell.RequestLevel,BaSyx.Models.AdminShell.RequestExtent)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_PostSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PostSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_PutSubmodelElementByPath(System.String,System.String,BaSyx.Models.AdminShell.ISubmodelElement)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PutSubmodelElementByPath(System.String,BaSyx.Models.AdminShell.ISubmodelElement)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_PatchSubmodelElementValueByPathValueOnly(System.String,System.String,System.Text.Json.JsonDocument)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PatchSubmodelElementValueByPathValueOnly(System.String,System.Text.Json.JsonDocument)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_DeleteSubmodelElementByPath(System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.DeleteSubmodelElementByPath(System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_GetFileByPath(System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetFileByPath(System.String)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_UploadFileContentByIdShort(System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.PutFileByPath(System.String,Microsoft.AspNetCore.Http.IFormFile)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_InvokeOperationSync(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationSync(System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_InvokeOperationAsync(System.String,System.String,BaSyx.Models.AdminShell.InvocationRequest)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.InvokeOperationAsync(System.String,BaSyx.Models.AdminShell.InvocationRequest)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRepositoryController.SubmodelRepo_GetOperationAsyncResult(System.String,System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelController.GetOperationAsyncResult(System.String,System.String)"/>
        </member>
        <member name="T:BaSyx.API.Http.Controllers.DescriptionController">
            <summary>
            The Description Controller
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.DescriptionController.#ctor(BaSyx.Models.Connectivity.IServiceDescriptor)">
            <summary>
            The constructor for the Description API
            </summary>
            <param name="descriptor">The service descriptor.</param>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.DescriptionController.GetDescription">
            <summary>
            Returns the self-describing information of a network resource (ServiceDescription)
            </summary>
            <returns></returns>
            <response code="200">Requested Description</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.DescriptionController.GetDescriptor">
            <summary>
            Returns the Service Descriptor
            </summary>
            <returns></returns>
            <response code="200">Requested Service Descriptor</response>
        </member>
        <member name="T:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController">
            <summary>
            The Asset Administration Shell Registry Controller
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.#ctor(BaSyx.API.Interfaces.IAssetAdministrationShellRegistryInterface)">
            <summary>
            The constructor for the Asset Administration Shell Registry Controller
            </summary>
            <param name="aasRegistry">The backend implementation for the IAssetAdministrationShellRegistry interface. Usually provided by the Depedency Injection mechanism.</param>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.GetAllAssetAdministrationShellDescriptors(System.String,System.String)">
            <summary>
            Returns all Asset Administration Shell Descriptors
            </summary>
            <returns></returns>
            <response code="200">Requested Asset Administration Shell Descriptors</response>        
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.PostAssetAdministrationShellDescriptor(BaSyx.Models.Connectivity.IAssetAdministrationShellDescriptor)">
            <summary>
            Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS
            </summary>
            <param name="aasDescriptor">Asset Administration Shell Descriptor object</param>
            <returns></returns>
            <response code="201">Asset Administration Shell Descriptor created successfully</response>
            <response code="400">The syntax of the passed Asset Administration Shell is not valid or malformed request</response>      
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.GetAssetAdministrationShellDescriptorById(System.String)">
            <summary>
            Returns a specific Asset Administration Shell Descriptor
            </summary>
            <param name="aasIdentifier">The Asset Administration Shell’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Requested Asset Administration Shell Descriptor</response>
            <response code="404">No Asset Administration Shell with passed id found</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.PutAssetAdministrationShellDescriptorById(System.String,BaSyx.Models.Connectivity.IAssetAdministrationShellDescriptor)">
            <summary>
            Updates an existing Asset Administration Shell Descriptor
            </summary>
            <param name="aasIdentifier">The Asset Administration Shell’s unique id (BASE64-URL-encoded)</param>
            <param name="aasDescriptor">Asset Administration Shell Descriptor object</param>
            <returns></returns>
            <response code="204">Asset Administration Shell Descriptor updated successfully</response>
            <response code="400">The syntax of the passed Asset Administration Shell is not valid or malformed request</response>    
            <response code="404">No Asset Administration Shell with passed id found</response>      
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.DeleteAssetAdministrationShellDescriptorById(System.String)">
            <summary>
            Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS
            </summary>
            <param name="aasIdentifier">The Asset Administration Shell’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="204">Asset Administration Shell Descriptor deleted successfully</response>
            <response code="404">No Asset Administration Shell with passed id found</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.ShellRegistry_GetAllSubmodelDescriptors(System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.GetAllSubmodelDescriptors"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.ShellRegistry_PostSubmodelDescriptor(System.String,BaSyx.Models.Connectivity.ISubmodelDescriptor)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.PostSubmodelDescriptor(BaSyx.Models.Connectivity.ISubmodelDescriptor)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.ShellRegistry_PutSubmodelDescriptorById(System.String,System.String,BaSyx.Models.Connectivity.ISubmodelDescriptor)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.PutSubmodelDescriptorById(System.String,BaSyx.Models.Connectivity.ISubmodelDescriptor)"/>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.ShellRegistry_GetSubmodelDescriptorById(System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.GetSubmodelDescriptorById(System.String)"/>  
        </member>
        <member name="M:BaSyx.API.Http.Controllers.AssetAdministrationShellRegistryController.ShellRegistry_DeleteSubmodelDescriptorById(System.String,System.String)">
            <inheritdoc cref="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.DeleteSubmodelDescriptorById(System.String)"/>
        </member>
        <member name="T:BaSyx.API.Http.Controllers.SubmodelRegistryController">
            <summary>
            The Submodel Registry Controller
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.#ctor(BaSyx.API.Interfaces.ISubmodelRegistryInterface)">
            <summary>
            The constructor for the Submodel Registry Controller
            </summary>
            <param name="submodelRegistry">The backend implementation for the ISubmodelRegistry interface. Usually provided by the Depedency Injection mechanism.</param>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.GetAllSubmodelDescriptors">
            <summary>
            Returns all Submodel Descriptors
            </summary>
            <returns></returns>
            <response code="200">Returns a list of found Submodels Descriptors</response>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.PostSubmodelDescriptor(BaSyx.Models.Connectivity.ISubmodelDescriptor)">
            <summary>
            Creates a new Submodel Descriptor, i.e. registers a submodel
            </summary>
            <param name="submodelDescriptor">Submodel Descriptor object</param>
            <returns></returns>
            <response code="201">Submodel Descriptor created successfully</response>
            <response code="400">The syntax of the passed Submodel is not valid or malformed request</response>      
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.PutSubmodelDescriptorById(System.String,BaSyx.Models.Connectivity.ISubmodelDescriptor)">
            <summary>
            Updates an existing Submodel Descriptor
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <param name="submodelDescriptor">The Submodel Descriptor</param>
            <returns></returns>
            <response code="204">Submodel Descriptor updated successfully</response>
            <response code="400">The syntax of the passed Submodel descriptor is not valid or malformed request</response>      
            <response code="404">No Submodel descriptor with passed id found</response>   
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.GetSubmodelDescriptorById(System.String)">
            <summary>
            Returns a specific Submodel Descriptor
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="200">Requested Submodel Descriptor</response>
            <response code="404">No Submodel descriptor with passed id found</response>     
        </member>
        <member name="M:BaSyx.API.Http.Controllers.SubmodelRegistryController.DeleteSubmodelDescriptorById(System.String)">
            <summary>
            Deletes a Submodel Descriptor, i.e. de-registers a submodel
            </summary>
            <param name="submodelIdentifier">The Submodel’s unique id (BASE64-URL-encoded)</param>
            <returns></returns>
            <response code="204">Submodel Descriptor deleted successfully</response>
            <response code="404">No Submodel descriptor with passed id found</response>  
        </member>
        <member name="T:BaSyx.API.Http.Controllers.ResultHandling">
            <summary>
            Helper class for handling Action Results for HTTP-Requests
            </summary>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.Base64UrlEncode(System.String)">
            <summary>
            Encodes a string to a Base64UrlEncoded string (UTF8)
            </summary>
            <param name="toEncode">String to encode</param>
            <returns></returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.Base64UrlDecode(System.String)">
            <summary>
            Decodes a Base64UrlEncoded string to a regular string(UTF8)
            </summary>
            <param name="toDecode">String to decode</param>
            <returns></returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.IsNullOrNotFound(BaSyx.API.ServiceProvider.ISubmodelServiceProviderRegistry,System.String,Microsoft.AspNetCore.Mvc.IActionResult@,BaSyx.API.ServiceProvider.ISubmodelServiceProvider@)">
            <summary>
            Checks whether submodelId is null or Submodel Service Provider cannot be found
            </summary>
            <param name="spRegistry">The Submodel Service Provider Registry</param>
            <param name="submodelId">The Submodel's unique id</param>
            <param name="result">The IActionResult in case aasId is null or the provider cannot be found</param>
            <param name="provider">The Asset Administration Shell Service Provider</param>
            <returns></returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.IsNullOrNotFound(BaSyx.API.ServiceProvider.IAssetAdministrationShellRepositoryServiceProvider,System.String,Microsoft.AspNetCore.Mvc.IActionResult@,BaSyx.API.ServiceProvider.IAssetAdministrationShellServiceProvider@)">
            <summary>
            Checks whether aasId is null or Asset Administration Shell Service Provider cannot be found
            </summary>
            <param name="serviceProvider">The Asset Administration Shell Repository Service Provider</param>
            <param name="aasId">The Asset Administration Shell's unique id</param>
            <param name="result">The IActionResult in case aasId is null or the provider cannot be found</param>
            <param name="provider">The Asset Administration Shell Service Provider</param>
            <returns></returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.IsNullOrNotFound(BaSyx.API.ServiceProvider.ISubmodelRepositoryServiceProvider,System.String,Microsoft.AspNetCore.Mvc.IActionResult@,BaSyx.API.ServiceProvider.ISubmodelServiceProvider@)">
            <summary>
            Checks whether submodelId is null or Submodel Service Provider cannot be found
            </summary>
            <param name="serviceProvider">The Submodel Repository Service Provider</param>
            <param name="submodelId">The Submodel's unique id</param>
            <param name="result">The IActionResult in case submodelId is null or the provider cannot be found</param>
            <param name="provider">The Submodel Service Provider</param>
            <returns></returns>        
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.NullResult(System.String)">
            <summary>
            Returns a Result-Object in an ObjectResult with status code 400 and a message which element is null or empty
            </summary>
            <param name="elementName">The name of the element which is null or empty</param>
            <returns></returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.BadRequestResult(System.String)">
            <summary>
            Returns a Result-Object in an BadRequest(400)-ObjectResult and a message why it is a BadRequest
            </summary>
            <param name="message">The message why it is a BadRequest</param>
            <returns></returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.MethodNotAllowedResult">
            <summary>
            Returns a Result-Object in an MethodNotAllowed(405)-ObjectResult
            </summary>
            <returns></returns>
        </member>
        <member name="M:BaSyx.API.Http.Controllers.ResultHandling.CreateActionResult(BaSyx.Utils.ResultHandling.IResult,BaSyx.API.Http.Controllers.CrudOperation,System.String)">
            <summary>
            Returns a Result-Object wrapped in an ObjectResult according to the CRUD-operation
            </summary>
            <param name="result">The orignary Result object</param>
            <param name="crud">The CRUD-operation taken</param>
            <param name="route">Optional route for Create-Operations</param>
            <returns></returns>
        </member>
        <member name="T:BaSyx.API.Http.Controllers.CrudOperation">
            <summary>
            Enumeration of the different CRUD-Operations
            </summary>
        </member>
        <member name="F:BaSyx.API.Http.Controllers.CrudOperation.Create">
            <summary>
            Create
            </summary>
        </member>
        <member name="F:BaSyx.API.Http.Controllers.CrudOperation.Retrieve">
            <summary>
            Retrieve
            </summary>
        </member>
        <member name="F:BaSyx.API.Http.Controllers.CrudOperation.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:BaSyx.API.Http.Controllers.CrudOperation.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:BaSyx.API.Http.Controllers.CrudOperation.Invoke">
            <summary>
            Invoke
            </summary>
        </member>
    </members>
</doc>
